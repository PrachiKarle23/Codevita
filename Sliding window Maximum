class Solution {
public:
    int solve(vector<int>& nums,int s,int e){
        int maxi=INT_MIN;
        for(int i=s;i<e;i++){
           if(maxi<nums[i]){
             maxi=nums[i];
           }
        }
        return maxi;
    }
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int>ans;
        int n=nums.size();
        for(int i=0;i<=n-k;i++)
        {
           int maxi=solve(nums,i,i+k);
           ans.push_back(maxi);
        }
        return ans;
    }
};


class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int>ans;
        int n=nums.size();
        deque<int>p;
        for(int j=0;j<nums.size();j++){
            if(p.size()==k){
               int ps=* max_element(p.begin(),p.end());
               ans.push_back(ps);
               p.pop_front();
            }
            p.push_back(nums[j]);
        }
        if(p.size()==k){
            int ps=* max_element(p.begin(),p.end());
            ans.push_back(ps);
        }

        return ans;
    }
};
